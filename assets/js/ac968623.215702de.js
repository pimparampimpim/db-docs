"use strict";(self.webpackChunkdb_dev=self.webpackChunkdb_dev||[]).push([[8352],{1124:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>a,toc:()=>l});var t=s(7624),r=s(2172);const i={id:"one_to_one",sidebar_position:2,description:""},o="\u0421\u0432\u044f\u0437\u044c \u043e\u0434\u0438\u043d \u043a \u043e\u0434\u043d\u043e\u043c\u0443",a={id:"postgresql/relations/one_to_one",title:"\u0421\u0432\u044f\u0437\u044c \u043e\u0434\u0438\u043d \u043a \u043e\u0434\u043d\u043e\u043c\u0443",description:"",source:"@site/docs/03.postgresql/01.relations/02.one_to_one.md",sourceDirName:"03.postgresql/01.relations",slug:"/postgresql/relations/one_to_one",permalink:"/db-docs/docs/postgresql/relations/one_to_one",draft:!1,unlisted:!1,editUrl:"https://github.com/sirius-db-dev/db-docs/tree/main/docs/03.postgresql/01.relations/02.one_to_one.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"one_to_one",sidebar_position:2,description:""},sidebar:"tutorialSidebar",previous:{title:"\u0421\u0432\u044f\u0437\u044c \u043e\u0434\u0438\u043d \u043a\u043e \u043c\u043d\u043e\u0433\u0438\u043c",permalink:"/db-docs/docs/postgresql/relations/one_to_many"},next:{title:"\u0421\u0432\u044f\u0437\u044c \u043c\u043d\u043e\u0433\u0438\u0435 \u043a\u043e \u043c\u043d\u043e\u0433\u0438\u043c",permalink:"/db-docs/docs/postgresql/relations/many_to_many"}},d={},l=[];function p(e){const n={br:"br",code:"code",h1:"h1",li:"li",mermaid:"mermaid",p:"p",pre:"pre",ul:"ul",...(0,r.M)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"\u0441\u0432\u044f\u0437\u044c-\u043e\u0434\u0438\u043d-\u043a-\u043e\u0434\u043d\u043e\u043c\u0443",children:"\u0421\u0432\u044f\u0437\u044c \u043e\u0434\u0438\u043d \u043a \u043e\u0434\u043d\u043e\u043c\u0443"}),"\n",(0,t.jsx)(n.p,{children:"\u0414\u0430\u043d\u044b 2 \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0438:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\u0447\u0435\u043b\u043e\u0432\u0435\u043a \u0441\u043e \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430\u043c\u0438 \u0438\u043c\u044f, \u0444\u0430\u043c\u0438\u043b\u0438\u044f \u0438 \u0434\u0430\u0442\u0430 \u0440\u043e\u0436\u0434\u0435\u043d\u0438\u044f"}),"\n",(0,t.jsx)(n.li,{children:"\u043f\u0430\u0441\u043f\u043e\u0440\u0442 \u0441\u043e \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430\u043c\u0438 \u0441\u0435\u0440\u0438\u044f, \u043d\u043e\u043c\u0435\u0440 \u0438 \u0434\u0430\u0442\u0430 \u0432\u044b\u0434\u0430\u0447\u0438"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["\u0423 \u0447\u0435\u043b\u043e\u0432\u0435\u043a\u0430 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043e\u0434\u0438\u043d \u043f\u0430\u0441\u043f\u043e\u0440\u0442.",(0,t.jsx)(n.br,{}),"\n","\u041f\u0430\u0441\u043f\u043e\u0440\u0442 \u043c\u043e\u0436\u0435\u0442 \u043f\u0440\u0438\u043d\u0430\u0434\u043b\u0435\u0436\u0430\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u043e\u0434\u043d\u043e\u043c\u0443 \u0430\u043a\u0442\u0435\u0440\u0443."]}),"\n",(0,t.jsx)(n.p,{children:"\u0414\u0430\u043d\u043d\u044b\u043c \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u044f\u043c \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0430\u044f \u0434\u0438\u0430\u0433\u0440\u0430\u043c\u043c\u0430:"}),"\n",(0,t.jsx)(n.mermaid,{value:'erDiagram\n    person {\n        int id PK\n        text first_name\n        text last_name\n        date birth_date\n    }\n    passport {\n        int id PK\n        int person_id FK\n        int series\n        int number\n        date issue_date\n    }\n    person ||--|| passport : ""'}),"\n",(0,t.jsx)(n.p,{children:"\u042d\u0442\u043e\u0439 \u0434\u0438\u0430\u0433\u0440\u0430\u043c\u043c\u0435 \u0432 SQL \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0442 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0442\u0430\u0431\u043b\u0438\u0446\u044b \u0438 \u0441\u0432\u044f\u0437\u0438:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"drop table if exists persons, passports cascade;\n\ncreate table persons\n(\n    id         int primary key,\n    first_name text,\n    last_name  text,\n    birth_date date\n);\n\ncreate table passports\n(\n    id         int primary key,\n    person_id  int references persons unique, -- \u0432 \u0441\u0432\u044f\u0437\u0438 one-to-one \u0432\u043d\u0435\u0448\u043d\u0438\u0439 \u043a\u043b\u044e\u0447 \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u043c\n    series     int,\n    number     int,\n    issue_date date\n);\n\ninsert into persons(id, first_name, last_name, birth_date)\nvalues (1, '\u0422\u043e\u043c', '\u0425\u043e\u043b\u043b\u0430\u043d\u0434', '1996-06-01'),\n       (2, '\u0411\u0435\u043d\u0435\u0434\u0438\u043a\u0442', '\u041a\u0430\u043c\u0431\u0435\u0440\u0431\u044d\u0442\u0447', '1976-07-19');\n\ninsert into passports(id, person_id, series, number, issue_date)\nvalues (1, 1, 1234, 567890, '2010-12-31'),\n       (2, 2, 4321, 987654, '2015-01-01');\n\nselect *\nfrom persons\n         left join passports on persons.id = passports.person_id;\n"})})]})}function c(e={}){const{wrapper:n}={...(0,r.M)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}}}]);